<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structas_1_1tmp_1_1details_1_1can__apply" kind="struct" language="C++" prot="public">
    <compoundname>as::tmp::details::can_apply</compoundname>
    <basecompoundref prot="public" virt="non-virtual">false_type</basecompoundref>
    <includes refid="can__apply_8h" local="no">can_apply.h</includes>
    <templateparamlist>
      <param>
        <type>template&lt; class... &gt; class</type>
        <declname>Z</declname>
        <defname>Z</defname>
      </param>
      <param>
        <type>class <ref refid="structas_1_1tmp_1_1types" kindref="compound">types</ref></type>
      </param>
      <param>
        <type>class</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>as::tmp::details::can_apply&lt; Z, types, class &gt;</label>
        <link refid="structas_1_1tmp_1_1details_1_1can__apply"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::false_type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>as::tmp::details::can_apply&lt; Z, types, class &gt;</label>
        <link refid="structas_1_1tmp_1_1details_1_1can__apply"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::false_type</label>
      </node>
    </collaborationgraph>
    <location file="src/can_apply.h" line="27" column="1" bodyfile="src/can_apply.h" bodystart="27" bodyend="28"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
