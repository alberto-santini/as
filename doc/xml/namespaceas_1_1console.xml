<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceas_1_1console" kind="namespace" language="C++">
    <compoundname>as::console</compoundname>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16c" prot="public" static="no">
        <name>Colour</name>
        <enumvalue id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16caee38e4d5dd68c4e440825018d549cb47" prot="public">
          <name>Red</name>
          <initializer>= 31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16cad382816a3cbeed082c9e216e7392eed1" prot="public">
          <name>Green</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16ca51e6cd92b6c45f9affdc158ecca2b8b8" prot="public">
          <name>Yellow</name>
          <initializer>= 33</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16ca9594eec95be70e7b1710f730fdda33d9" prot="public">
          <name>Blue</name>
          <initializer>= 34</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16cab91cc2c1416fcca942b61c7ac5b1a9ac" prot="public">
          <name>Magenta</name>
          <initializer>= 35</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16ca7a1920d61156abc05a60135aefe8bc67" prot="public">
          <name>Default</name>
          <initializer>= 39</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Console colour codes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="21" column="1" bodyfile="src/console.h" bodystart="21" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceas_1_1console_1ac43754a26ec71b3fa2a9e2c60808947c" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string as::console::notice</definition>
        <argsstring></argsstring>
        <name>notice</name>
        <initializer>= <ref refid="namespaceas_1_1console_1a64c8640b4ced55636cb8926b1640d6e9" kindref="member">colourise</ref>(<ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16cad382816a3cbeed082c9e216e7392eed1" kindref="member">Colour::Green</ref>, &quot;[o] &quot;)</initializer>
        <briefdescription>
<para>String that can be used to start a notice message. </para>        </briefdescription>
        <detaileddescription>
<para>notice </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="78" column="1" bodyfile="src/console.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceas_1_1console_1abd7d8f203fa6be7b8827462e79d3d2dc" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string as::console::warning</definition>
        <argsstring></argsstring>
        <name>warning</name>
        <initializer>= <ref refid="namespaceas_1_1console_1a64c8640b4ced55636cb8926b1640d6e9" kindref="member">colourise</ref>(<ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16ca51e6cd92b6c45f9affdc158ecca2b8b8" kindref="member">Colour::Yellow</ref>, &quot;[*] &quot;)</initializer>
        <briefdescription>
<para>String that can be used to start a warning message. </para>        </briefdescription>
        <detaileddescription>
<para>warning </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="83" column="1" bodyfile="src/console.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceas_1_1console_1a1f55b2b8b6fd0f2d1eb2a25a9cf14087" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string as::console::error</definition>
        <argsstring></argsstring>
        <name>error</name>
        <initializer>= <ref refid="namespaceas_1_1console_1a64c8640b4ced55636cb8926b1640d6e9" kindref="member">colourise</ref>(<ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16caee38e4d5dd68c4e440825018d549cb47" kindref="member">Colour::Red</ref>, &quot;[!] &quot;)</initializer>
        <briefdescription>
<para>String that can be used to start an error message. </para>        </briefdescription>
        <detaileddescription>
<para>error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="88" column="1" bodyfile="src/console.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceas_1_1console_1ae7e08b7053b857ff4d798c9860680ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr std::underlying_type&lt; <ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16c" kindref="member">Colour</ref> &gt;::type</type>
        <definition>constexpr std::underlying_type&lt;Colour&gt;::type as::console::colour_code</definition>
        <argsstring>(const Colour &amp;c)</argsstring>
        <name>colour_code</name>
        <param>
          <type>const <ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16c" kindref="member">Colour</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Gives the numerical code corresponding to the colour. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding numerical code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="35" column="1" bodyfile="src/console.h" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1console_1a960fbc86f1ff964059acb44b12342199" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string as::console::escape</definition>
        <argsstring>(Colour c)</argsstring>
        <name>escape</name>
        <param>
          <type><ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16c" kindref="member">Colour</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Gives a string with the escape codes relative to the colour. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding string with escape codes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="44" column="1" bodyfile="src/console.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1console_1a05dafe6fcc36510443d4769ad4667652" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; as::console::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Colour &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16c" kindref="member">Colour</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Prints a colour code. </para>        </briefdescription>
        <detaileddescription>
<para>From this moment on, the console output will be in that colour, until another colour is used (including, e.g., <ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16ca7a1920d61156abc05a60135aefe8bc67" kindref="member">Colour::Default</ref>, which resets it).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The console output iterator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The console output iterator (for chaining). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="57" column="1" bodyfile="src/console.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1console_1a64c8640b4ced55636cb8926b1640d6e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string as::console::colourise</definition>
        <argsstring>(Colour c, const T &amp;what)</argsstring>
        <name>colourise</name>
        <param>
          <type><ref refid="namespaceas_1_1console_1ab2f5a531e43f4ee9e0f348f8aa5ce16c" kindref="member">Colour</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>what</declname>
        </param>
        <briefdescription>
<para>Colours some content and then resets the colour to default. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Content type. It must be possible to input it into a stringstream via operator&lt;&lt;. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The content to colour. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string with the proper escape characters to colourise the content. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/console.h" line="69" column="1" bodyfile="src/console.h" bodystart="69" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/console.h" line="17" column="1"/>
  </compounddef>
</doxygen>
