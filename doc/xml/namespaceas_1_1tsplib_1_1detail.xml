<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceas_1_1tsplib_1_1detail" kind="namespace" language="C++">
    <compoundname>as::tsplib::detail</compoundname>
    <innerclass refid="classas_1_1tsplib_1_1detail_1_1TSPLIBInput" prot="public">as::tsplib::detail::TSPLIBInput</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceas_1_1tsplib_1_1detail_1ac5ff711af5bcc75d1df53108b0a6f9a4" prot="public" static="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float as::tsplib::detail::tsp_pi</definition>
        <argsstring></argsstring>
        <name>tsp_pi</name>
        <initializer>= 3.141596f</initializer>
        <briefdescription>
<para>Constant to use for TSPLIB instances distance calculations. Similar enough to pi. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="311" column="1" bodyfile="src/tsplib.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceas_1_1tsplib_1_1detail_1a784114698e6ab4a1ae57a2f38692d2c9" prot="public" static="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float as::tsplib::detail::tsp_earth_radius</definition>
        <argsstring></argsstring>
        <name>tsp_earth_radius</name>
        <initializer>= 6378.388f</initializer>
        <briefdescription>
<para>Constant to use for TSPLIB instances distance calculations. Similar enough to the average earth radius. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="316" column="1" bodyfile="src/tsplib.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceas_1_1tsplib_1_1detail_1a3fabd21c4bc13069fbe2bcb9b6c59e74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classas_1_1tsplib_1_1detail_1_1TSPLIBInput" kindref="compound">TSPLIBInput</ref></type>
        <definition>TSPLIBInput as::tsplib::detail::read_tsplib_file</definition>
        <argsstring>(std::string tsplib_file)</argsstring>
        <name>read_tsplib_file</name>
        <param>
          <type>std::string</type>
          <declname>tsplib_file</declname>
        </param>
        <briefdescription>
<para>Reads the syntax of a TSPLIB file and makes sure it is correct, without delving into the semantics of what is being read. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tsplib_file</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file with the TSPLIB instance specs. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A structure with the syntactic components of the instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="227" column="1" bodyfile="src/tsplib.h" bodystart="227" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1tsplib_1_1detail_1a3ae3133c661a1284988d3615f1a3e3d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float as::tsplib::detail::latlon</definition>
        <argsstring>(float coordinate)</argsstring>
        <name>latlon</name>
        <param>
          <type>float</type>
          <declname>coordinate</declname>
        </param>
        <briefdescription>
<para>Function to be used to get the latitude or longitude from, respectively, the x or y coordinates of points in TSPLIB instances with geographical distances. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coordinate</parametername>
</parameternamelist>
<parameterdescription>
<para>The x or y coordinate of the point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding latitude or longitude of the point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="325" column="1" bodyfile="src/tsplib.h" bodystart="325" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1tsplib_1_1detail_1aa87df60b8ef17c19d0cb8329a7a28731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::function&lt; float(float, float, float, float)&gt;</type>
        <definition>std::function&lt;float(float,float,float,float)&gt; as::tsplib::detail::get_distance_function</definition>
        <argsstring>(std::string f_name)</argsstring>
        <name>get_distance_function</name>
        <param>
          <type>std::string</type>
          <declname>f_name</declname>
        </param>
        <briefdescription>
<para>Gets the distance function to use to compute TSPLIB distances from vertex coordinates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The function name as it appears in TSPLIB files. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A function that takes four coordinates (x1, y1, x2, y2) and returns the distance between points (x1, y1) and (x2, y2). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="338" column="1" bodyfile="src/tsplib.h" bodystart="338" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1tsplib_1_1detail_1a1337beecf37622b3597de699f3852380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="structas_1_1TwoDimPoint" kindref="compound">TwoDimPoint</ref>, <ref refid="structas_1_1TwoDimPoint" kindref="compound">TwoDimPoint</ref> &gt;</type>
        <definition>std::pair&lt;TwoDimPoint, TwoDimPoint&gt; as::tsplib::detail::get_circle_intersection</definition>
        <argsstring>(float dist_centre_1_point, float dist_centre_2_point, float dist_centre_1_centre_2)</argsstring>
        <name>get_circle_intersection</name>
        <param>
          <type>float</type>
          <declname>dist_centre_1_point</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dist_centre_2_point</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dist_centre_1_centre_2</declname>
        </param>
        <briefdescription>
<para>Returns the two intersection points between two circles. </para>        </briefdescription>
        <detaileddescription>
<para>It is assumed that the first circle is centred ad (0,0) and the second one at (dist_centre_1_centre_2, 0). Furthermore, the radius of the first circle is dist_centre_1_point and the radius of the second circle is dist_centre_2_point. We also try to adjust eventual inconsistencies in the data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dist_centre_1_point</parametername>
</parameternamelist>
<parameterdescription>
<para>Radius of the first circle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist_centre_2_point</parametername>
</parameternamelist>
<parameterdescription>
<para>Radius of the second circle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist_centre_1_centre_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance between the circles. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordinates of the two intersection points between the two circles. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="404" column="1" bodyfile="src/tsplib.h" bodystart="404" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="namespaceas_1_1tsplib_1_1detail_1a6b7b8b134e00f78387c5fe70f5791572" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float as::tsplib::detail::euclidean_dist</definition>
        <argsstring>(const TwoDimPoint &amp;pt1, const TwoDimPoint &amp;pt2)</argsstring>
        <name>euclidean_dist</name>
        <param>
          <type>const <ref refid="structas_1_1TwoDimPoint" kindref="compound">TwoDimPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="structas_1_1TwoDimPoint" kindref="compound">TwoDimPoint</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
<para>Calculates the euclidean distance between two points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The euclidean distance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tsplib.h" line="440" column="1" bodyfile="src/tsplib.h" bodystart="440" bodyend="445"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/tsplib.h" line="33" column="1"/>
  </compounddef>
</doxygen>
